<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>leetcode on Liu Chang Notes</title><link>https://liuchang0812.github.io/categories/leetcode/</link><description>Recent content in leetcode on Liu Chang Notes</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 10 May 2022 22:21:58 +0800</lastBuildDate><atom:link href="https://liuchang0812.github.io/categories/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>2266. 统计打字方案数</title><link>https://liuchang0812.github.io/posts/tech/leetcode/leetcode2266/</link><pubDate>Tue, 10 May 2022 22:21:58 +0800</pubDate><guid>https://liuchang0812.github.io/posts/tech/leetcode/leetcode2266/</guid><description>爬楼梯的加强版本，分别提前生成三个字母和四个字母的 fib 数组，然后分组统计后相乘。代码如下： class Solution { public: int countTexts(string pressedKeys) { int f1[100005]; int f2[100005]; memset(f1, 0, sizeof f1); memset(f2, 0, sizeof f2); f1[0] = 1; f1[1] = 2;</description></item></channel></rss>